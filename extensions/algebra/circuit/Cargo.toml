[package]
name = "openvm-algebra-circuit"
description = "OpenVM circuit extension for algebra (modular arithmetic)"
version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
openvm-circuit-primitives = { workspace = true }
openvm-circuit-primitives-derive = { workspace = true }
openvm-instructions = { workspace = true }
openvm-circuit-derive = { workspace = true }
openvm-circuit = { workspace = true }
openvm-stark-backend = { workspace = true }
openvm-mod-circuit-builder = { workspace = true }
openvm-stark-sdk = { workspace = true }
openvm-rv32im-circuit = { workspace = true }
openvm-rv32-adapters = { workspace = true }
openvm-algebra-transpiler = { workspace = true }
openvm-cuda-backend = { workspace = true, optional = true }
openvm-cuda-common = { workspace = true, optional = true }

halo2curves-axiom = { workspace = true }
num-bigint = { workspace = true, features = ["serde"] }
num-traits = { workspace = true }
rand = { workspace = true }
derive_more = { workspace = true, features = ["from", "deref", "deref_mut"] }
strum = { workspace = true }
derive-new = { workspace = true }
serde.workspace = true
serde_with = { workspace = true }
eyre = { workspace = true }
cfg-if = { workspace = true }
struct-reflection = { workspace = true }

[dev-dependencies]
openvm-mod-circuit-builder = { workspace = true, features = ["test-utils"] }
openvm-circuit = { workspace = true, features = ["test-utils"] }
openvm-rv32-adapters = { workspace = true, features = ["test-utils"] }
openvm-pairing-guest = { workspace = true, features = ["halo2curves"] }
test-case = { workspace = true }

[build-dependencies]
openvm-cuda-builder = { workspace = true, optional = true }

[features]
default = []
tco = ["openvm-rv32im-circuit/tco"]
cuda = [
    "dep:openvm-cuda-common",
    "dep:openvm-cuda-backend",
    "dep:openvm-cuda-builder",
    "openvm-circuit-primitives/cuda",
    "openvm-mod-circuit-builder/cuda",
    "openvm-circuit/cuda",
    "openvm-rv32im-circuit/cuda",
]
touchemall = [
    "cuda",
    "openvm-circuit/touchemall",
    "openvm-circuit-primitives/touchemall",
    "openvm-cuda-backend/touchemall",
    "openvm-cuda-common/touchemall",
]

[package.metadata.cargo-shear]
ignored = ["derive_more"]
